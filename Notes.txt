 Tasks
 ==============================================================================
 Done
 x	Db - get connection string to db working Db - Connection to SCAMPS 
 x	Db - create/update SQL to create Db and tables for users, sessions & configuration
	Db - SQL to get confidence config ranges & other config keys
	Db - SQL to find existing & update | add session
	Db - SQL to find user
	Get general top to bottom scenario working - test returning no, med & high confidence
	Finish routing based on confidence - including enpoint processing callout
	Network Context - add more to checks, more pieces of information like incoming address, whitelists
 x	Endpoint Context - define Db config for it
	IDisposable on ContextActions

	Externalize SQL queries
	Cookie Context -  CookieTools, be sure to add configurable expirations....
	Cookies - handling - Encrypt, decrypt cookies
	Cookies - SessionID, permission keys, tests & implementation
	Cookies - example of timeout handling
	User Management - User LEAD (ala CRUD) & tests
	Add full login challenge/resolution for localDb,AD, fall-through 
	OAuth,OpenID hooks
	Logging - both error passing and internal (audit) logging of user activities
	Whitelists table - out of Environment table

Scenarios
==================================================================================
	As a user I want to login to a system for the first time and then have it add me to the UserDb
	As a user I want to login to a system and have the system help if I have previously created a cookie
	As a user I want to login to a system as an AD user
	As a user I want to use my Google login to authorize me via OAuth


	As an administrator I want to add a new user
	As an administrator I want to list users
	As an administrator I want to edit user parameters - including permissions & groups
	As an administrator I want to delete a user


 Research & General
 ==============================================================================
 	Assuming Scamps.environment is equivalent to ADMIN_CONFIG => move whitelisting to their own tables - 
		for multisite types of setups....
 
	Separate representation of data in page (HttpContext) from code for authorization 
	as much as possible. Token, UserID, Password, Domain are required for Authentication
	Level of Authentication is seperately determined by ContextChecks.

	In HttpContext, for Network Context check these clues: 
	<authentication mode="Forms"> Current User is: , System.Security.Principal.GenericIdentity
	<authentication mode="Windows"> Current User is: , System.Security.Principal.WindowsIdentity
	
	Also for network context, take apart the hostname and address to check for whitelisted values to 
	allow RSO

 Questions
 ================================================================================
 Is there already a mechanism for the server to connect to the EHR Authorization server (with out an explicit httpClient object?)
